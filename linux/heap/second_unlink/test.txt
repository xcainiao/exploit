
main:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 70 4c             	add    %dh,0x4c(%eax)
 804819a:	2b de                	sub    %esi,%ebx
 804819c:	5f                   	pop    %edi
 804819d:	d4 2c                	aam    $0x2c
 804819f:	ce                   	into   
 80481a0:	73 21                	jae    80481c3 <_init-0x12d>
 80481a2:	80 65 ea 0e          	andb   $0xe,-0x16(%ebp)
 80481a6:	da 01                	fiaddl (%ecx)
 80481a8:	42                   	inc    %edx
 80481a9:	7c c0                	jl     804816b <_init-0x185>
 80481ab:	c2                   	.byte 0xc2

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	06                   	push   %es
 80481b1:	00 00                	add    %al,(%eax)
 80481b3:	00 01                	add    %al,(%ecx)
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 00    	add    %al,0x0
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 06                	add    %al,(%esi)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x164>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	1a 00                	sbb    (%eax),%al
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	38 00                	cmp    %al,(%eax)
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	1f                   	pop    %ds
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 3d 00 00 00 00    	add    %bh,0x0
 8048211:	00 00                	add    %al,(%eax)
 8048213:	00 00                	add    %al,(%eax)
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 20                	add    %ah,(%eax)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 26                	add    %ah,(%esi)
	...
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 0b                	add    %cl,(%ebx)
 804822d:	00 00                	add    %al,(%eax)
 804822f:	00 8c 85 04 08 04 00 	add    %cl,0x40804(%ebp,%eax,4)
 8048236:	00 00                	add    %al,(%eax)
 8048238:	11 00                	adc    %eax,(%eax)
 804823a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804823c <.dynstr>:
 804823c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048240:	63 2e                	arpl   %bp,(%esi)
 8048242:	73 6f                	jae    80482b3 <_init-0x3d>
 8048244:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048249:	4f                   	dec    %edi
 804824a:	5f                   	pop    %edi
 804824b:	73 74                	jae    80482c1 <_init-0x2f>
 804824d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048254:	64 
 8048255:	00 72 65             	add    %dh,0x65(%edx)
 8048258:	61                   	popa   
 8048259:	64 00 6d 61          	add    %ch,%fs:0x61(%ebp)
 804825d:	6c                   	insb   (%dx),%es:(%edi)
 804825e:	6c                   	insb   (%dx),%es:(%edi)
 804825f:	6f                   	outsl  %ds:(%esi),(%dx)
 8048260:	63 00                	arpl   %ax,(%eax)
 8048262:	5f                   	pop    %edi
 8048263:	5f                   	pop    %edi
 8048264:	6c                   	insb   (%dx),%es:(%edi)
 8048265:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 804826c:	72 74                	jb     80482e2 <_init-0xe>
 804826e:	5f                   	pop    %edi
 804826f:	6d                   	insl   (%dx),%es:(%edi)
 8048270:	61                   	popa   
 8048271:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%esi),%ebp
 8048278:	00 5f 5f             	add    %bl,0x5f(%edi)
 804827b:	67 6d                	insl   (%dx),%es:(%di)
 804827d:	6f                   	outsl  %ds:(%esi),(%dx)
 804827e:	6e                   	outsb  %ds:(%esi),(%dx)
 804827f:	5f                   	pop    %edi
 8048280:	73 74                	jae    80482f6 <_init+0x6>
 8048282:	61                   	popa   
 8048283:	72 74                	jb     80482f9 <_init+0x9>
 8048285:	5f                   	pop    %edi
 8048286:	5f                   	pop    %edi
 8048287:	00 47 4c             	add    %al,0x4c(%edi)
 804828a:	49                   	dec    %ecx
 804828b:	42                   	inc    %edx
 804828c:	43                   	inc    %ebx
 804828d:	5f                   	pop    %edi
 804828e:	32 2e                	xor    (%esi),%ch
 8048290:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048292 <.gnu.version>:
 8048292:	00 00                	add    %al,(%eax)
 8048294:	02 00                	add    (%eax),%al
 8048296:	02 00                	add    (%eax),%al
 8048298:	02 00                	add    (%eax),%al
 804829a:	00 00                	add    %al,(%eax)
 804829c:	02 00                	add    (%eax),%al
 804829e:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080482a0 <.gnu.version_r>:
 80482a0:	01 00                	add    %eax,(%eax)
 80482a2:	01 00                	add    %eax,(%eax)
 80482a4:	01 00                	add    %eax,(%eax)
 80482a6:	00 00                	add    %al,(%eax)
 80482a8:	10 00                	adc    %al,(%eax)
 80482aa:	00 00                	add    %al,(%eax)
 80482ac:	00 00                	add    %al,(%eax)
 80482ae:	00 00                	add    %al,(%eax)
 80482b0:	10 69 69             	adc    %ch,0x69(%ecx)
 80482b3:	0d 00 00 02 00       	or     $0x20000,%eax
 80482b8:	4c                   	dec    %esp
 80482b9:	00 00                	add    %al,(%eax)
 80482bb:	00 00                	add    %al,(%eax)
 80482bd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482c0 <.rel.dyn>:
 80482c0:	fc                   	cld    
 80482c1:	9f                   	lahf   
 80482c2:	04 08                	add    $0x8,%al
 80482c4:	06                   	push   %es
 80482c5:	04 00                	add    $0x0,%al
	...

Disassembly of section .rel.plt:

080482c8 <.rel.plt>:
 80482c8:	0c a0                	or     $0xa0,%al
 80482ca:	04 08                	add    $0x8,%al
 80482cc:	07                   	pop    %es
 80482cd:	01 00                	add    %eax,(%eax)
 80482cf:	00 10                	add    %dl,(%eax)
 80482d1:	a0 04 08 07 02       	mov    0x2070804,%al
 80482d6:	00 00                	add    %al,(%eax)
 80482d8:	14 a0                	adc    $0xa0,%al
 80482da:	04 08                	add    $0x8,%al
 80482dc:	07                   	pop    %es
 80482dd:	03 00                	add    (%eax),%eax
 80482df:	00 18                	add    %bl,(%eax)
 80482e1:	a0 04 08 07 04       	mov    0x4070804,%al
 80482e6:	00 00                	add    %al,(%eax)
 80482e8:	1c a0                	sbb    $0xa0,%al
 80482ea:	04 08                	add    $0x8,%al
 80482ec:	07                   	pop    %es
 80482ed:	05                   	.byte 0x5
	...

Disassembly of section .init:

080482f0 <_init>:
 80482f0:	53                   	push   %ebx
 80482f1:	83 ec 08             	sub    $0x8,%esp
 80482f4:	e8 b7 00 00 00       	call   80483b0 <__x86.get_pc_thunk.bx>
 80482f9:	81 c3 07 1d 00 00    	add    $0x1d07,%ebx
 80482ff:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048305:	85 c0                	test   %eax,%eax
 8048307:	74 05                	je     804830e <_init+0x1e>
 8048309:	e8 52 00 00 00       	call   8048360 <__gmon_start__@plt>
 804830e:	83 c4 08             	add    $0x8,%esp
 8048311:	5b                   	pop    %ebx
 8048312:	c3                   	ret    

Disassembly of section .plt:

08048320 <read@plt-0x10>:
 8048320:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048326:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804832c:	00 00                	add    %al,(%eax)
	...

08048330 <read@plt>:
 8048330:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048336:	68 00 00 00 00       	push   $0x0
 804833b:	e9 e0 ff ff ff       	jmp    8048320 <_init+0x30>

08048340 <free@plt>:
 8048340:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048346:	68 08 00 00 00       	push   $0x8
 804834b:	e9 d0 ff ff ff       	jmp    8048320 <_init+0x30>

08048350 <malloc@plt>:
 8048350:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048356:	68 10 00 00 00       	push   $0x10
 804835b:	e9 c0 ff ff ff       	jmp    8048320 <_init+0x30>

08048360 <__gmon_start__@plt>:
 8048360:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048366:	68 18 00 00 00       	push   $0x18
 804836b:	e9 b0 ff ff ff       	jmp    8048320 <_init+0x30>

08048370 <__libc_start_main@plt>:
 8048370:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048376:	68 20 00 00 00       	push   $0x20
 804837b:	e9 a0 ff ff ff       	jmp    8048320 <_init+0x30>

Disassembly of section .text:

08048380 <_start>:
 8048380:	31 ed                	xor    %ebp,%ebp
 8048382:	5e                   	pop    %esi
 8048383:	89 e1                	mov    %esp,%ecx
 8048385:	83 e4 f0             	and    $0xfffffff0,%esp
 8048388:	50                   	push   %eax
 8048389:	54                   	push   %esp
 804838a:	52                   	push   %edx
 804838b:	68 70 85 04 08       	push   $0x8048570
 8048390:	68 00 85 04 08       	push   $0x8048500
 8048395:	51                   	push   %ecx
 8048396:	56                   	push   %esi
 8048397:	68 7d 84 04 08       	push   $0x804847d
 804839c:	e8 cf ff ff ff       	call   8048370 <__libc_start_main@plt>
 80483a1:	f4                   	hlt    
 80483a2:	66 90                	xchg   %ax,%ax
 80483a4:	66 90                	xchg   %ax,%ax
 80483a6:	66 90                	xchg   %ax,%ax
 80483a8:	66 90                	xchg   %ax,%ax
 80483aa:	66 90                	xchg   %ax,%ax
 80483ac:	66 90                	xchg   %ax,%ax
 80483ae:	66 90                	xchg   %ax,%ax

080483b0 <__x86.get_pc_thunk.bx>:
 80483b0:	8b 1c 24             	mov    (%esp),%ebx
 80483b3:	c3                   	ret    
 80483b4:	66 90                	xchg   %ax,%ax
 80483b6:	66 90                	xchg   %ax,%ax
 80483b8:	66 90                	xchg   %ax,%ax
 80483ba:	66 90                	xchg   %ax,%ax
 80483bc:	66 90                	xchg   %ax,%ax
 80483be:	66 90                	xchg   %ax,%ax

080483c0 <deregister_tm_clones>:
 80483c0:	b8 2b a0 04 08       	mov    $0x804a02b,%eax
 80483c5:	2d 28 a0 04 08       	sub    $0x804a028,%eax
 80483ca:	83 f8 06             	cmp    $0x6,%eax
 80483cd:	77 01                	ja     80483d0 <deregister_tm_clones+0x10>
 80483cf:	c3                   	ret    
 80483d0:	b8 00 00 00 00       	mov    $0x0,%eax
 80483d5:	85 c0                	test   %eax,%eax
 80483d7:	74 f6                	je     80483cf <deregister_tm_clones+0xf>
 80483d9:	55                   	push   %ebp
 80483da:	89 e5                	mov    %esp,%ebp
 80483dc:	83 ec 18             	sub    $0x18,%esp
 80483df:	c7 04 24 28 a0 04 08 	movl   $0x804a028,(%esp)
 80483e6:	ff d0                	call   *%eax
 80483e8:	c9                   	leave  
 80483e9:	c3                   	ret    
 80483ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080483f0 <register_tm_clones>:
 80483f0:	b8 28 a0 04 08       	mov    $0x804a028,%eax
 80483f5:	2d 28 a0 04 08       	sub    $0x804a028,%eax
 80483fa:	c1 f8 02             	sar    $0x2,%eax
 80483fd:	89 c2                	mov    %eax,%edx
 80483ff:	c1 ea 1f             	shr    $0x1f,%edx
 8048402:	01 d0                	add    %edx,%eax
 8048404:	d1 f8                	sar    %eax
 8048406:	75 01                	jne    8048409 <register_tm_clones+0x19>
 8048408:	c3                   	ret    
 8048409:	ba 00 00 00 00       	mov    $0x0,%edx
 804840e:	85 d2                	test   %edx,%edx
 8048410:	74 f6                	je     8048408 <register_tm_clones+0x18>
 8048412:	55                   	push   %ebp
 8048413:	89 e5                	mov    %esp,%ebp
 8048415:	83 ec 18             	sub    $0x18,%esp
 8048418:	89 44 24 04          	mov    %eax,0x4(%esp)
 804841c:	c7 04 24 28 a0 04 08 	movl   $0x804a028,(%esp)
 8048423:	ff d2                	call   *%edx
 8048425:	c9                   	leave  
 8048426:	c3                   	ret    
 8048427:	89 f6                	mov    %esi,%esi
 8048429:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048430 <__do_global_dtors_aux>:
 8048430:	80 3d 40 a0 04 08 00 	cmpb   $0x0,0x804a040
 8048437:	75 13                	jne    804844c <__do_global_dtors_aux+0x1c>
 8048439:	55                   	push   %ebp
 804843a:	89 e5                	mov    %esp,%ebp
 804843c:	83 ec 08             	sub    $0x8,%esp
 804843f:	e8 7c ff ff ff       	call   80483c0 <deregister_tm_clones>
 8048444:	c6 05 40 a0 04 08 01 	movb   $0x1,0x804a040
 804844b:	c9                   	leave  
 804844c:	f3 c3                	repz ret 
 804844e:	66 90                	xchg   %ax,%ax

08048450 <frame_dummy>:
 8048450:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048455:	85 c0                	test   %eax,%eax
 8048457:	74 1f                	je     8048478 <frame_dummy+0x28>
 8048459:	b8 00 00 00 00       	mov    $0x0,%eax
 804845e:	85 c0                	test   %eax,%eax
 8048460:	74 16                	je     8048478 <frame_dummy+0x28>
 8048462:	55                   	push   %ebp
 8048463:	89 e5                	mov    %esp,%ebp
 8048465:	83 ec 18             	sub    $0x18,%esp
 8048468:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804846f:	ff d0                	call   *%eax
 8048471:	c9                   	leave  
 8048472:	e9 79 ff ff ff       	jmp    80483f0 <register_tm_clones>
 8048477:	90                   	nop
 8048478:	e9 73 ff ff ff       	jmp    80483f0 <register_tm_clones>

0804847d <main>:
 804847d:	55                   	push   %ebp
 804847e:	89 e5                	mov    %esp,%ebp
 8048480:	83 e4 f0             	and    $0xfffffff0,%esp
 8048483:	83 ec 10             	sub    $0x10,%esp
 8048486:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)
 804848d:	e8 be fe ff ff       	call   8048350 <malloc@plt>
 8048492:	a3 60 a0 04 08       	mov    %eax,0x804a060
 8048497:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)
 804849e:	e8 ad fe ff ff       	call   8048350 <malloc@plt>
 80484a3:	a3 64 a0 04 08       	mov    %eax,0x804a064
 80484a8:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)
 80484af:	e8 9c fe ff ff       	call   8048350 <malloc@plt>
 80484b4:	a3 68 a0 04 08       	mov    %eax,0x804a068
 80484b9:	a1 68 a0 04 08       	mov    0x804a068,%eax
 80484be:	c7 00 2f 62 69 6e    	movl   $0x6e69622f,(%eax)
 80484c4:	c7 40 04 2f 62 61 73 	movl   $0x7361622f,0x4(%eax)
 80484cb:	66 c7 40 08 68 00    	movw   $0x68,0x8(%eax)
 80484d1:	a1 60 a0 04 08       	mov    0x804a060,%eax
 80484d6:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484da:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80484e1:	e8 4a fe ff ff       	call   8048330 <read@plt>
 80484e6:	a1 64 a0 04 08       	mov    0x804a064,%eax
 80484eb:	89 04 24             	mov    %eax,(%esp)
 80484ee:	e8 4d fe ff ff       	call   8048340 <free@plt>
 80484f3:	c9                   	leave  
 80484f4:	c3                   	ret    
 80484f5:	66 90                	xchg   %ax,%ax
 80484f7:	66 90                	xchg   %ax,%ax
 80484f9:	66 90                	xchg   %ax,%ax
 80484fb:	66 90                	xchg   %ax,%ax
 80484fd:	66 90                	xchg   %ax,%ax
 80484ff:	90                   	nop

08048500 <__libc_csu_init>:
 8048500:	55                   	push   %ebp
 8048501:	57                   	push   %edi
 8048502:	31 ff                	xor    %edi,%edi
 8048504:	56                   	push   %esi
 8048505:	53                   	push   %ebx
 8048506:	e8 a5 fe ff ff       	call   80483b0 <__x86.get_pc_thunk.bx>
 804850b:	81 c3 f5 1a 00 00    	add    $0x1af5,%ebx
 8048511:	83 ec 1c             	sub    $0x1c,%esp
 8048514:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048518:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804851e:	e8 cd fd ff ff       	call   80482f0 <_init>
 8048523:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048529:	29 c6                	sub    %eax,%esi
 804852b:	c1 fe 02             	sar    $0x2,%esi
 804852e:	85 f6                	test   %esi,%esi
 8048530:	74 27                	je     8048559 <__libc_csu_init+0x59>
 8048532:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048538:	8b 44 24 38          	mov    0x38(%esp),%eax
 804853c:	89 2c 24             	mov    %ebp,(%esp)
 804853f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048543:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048547:	89 44 24 04          	mov    %eax,0x4(%esp)
 804854b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048552:	83 c7 01             	add    $0x1,%edi
 8048555:	39 f7                	cmp    %esi,%edi
 8048557:	75 df                	jne    8048538 <__libc_csu_init+0x38>
 8048559:	83 c4 1c             	add    $0x1c,%esp
 804855c:	5b                   	pop    %ebx
 804855d:	5e                   	pop    %esi
 804855e:	5f                   	pop    %edi
 804855f:	5d                   	pop    %ebp
 8048560:	c3                   	ret    
 8048561:	eb 0d                	jmp    8048570 <__libc_csu_fini>
 8048563:	90                   	nop
 8048564:	90                   	nop
 8048565:	90                   	nop
 8048566:	90                   	nop
 8048567:	90                   	nop
 8048568:	90                   	nop
 8048569:	90                   	nop
 804856a:	90                   	nop
 804856b:	90                   	nop
 804856c:	90                   	nop
 804856d:	90                   	nop
 804856e:	90                   	nop
 804856f:	90                   	nop

08048570 <__libc_csu_fini>:
 8048570:	f3 c3                	repz ret 

Disassembly of section .fini:

08048574 <_fini>:
 8048574:	53                   	push   %ebx
 8048575:	83 ec 08             	sub    $0x8,%esp
 8048578:	e8 33 fe ff ff       	call   80483b0 <__x86.get_pc_thunk.bx>
 804857d:	81 c3 83 1a 00 00    	add    $0x1a83,%ebx
 8048583:	83 c4 08             	add    $0x8,%esp
 8048586:	5b                   	pop    %ebx
 8048587:	c3                   	ret    

Disassembly of section .rodata:

08048588 <_fp_hw>:
 8048588:	03 00                	add    (%eax),%eax
	...

0804858c <_IO_stdin_used>:
 804858c:	01 00                	add    %eax,(%eax)
 804858e:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

08048590 <.eh_frame_hdr>:
 8048590:	01 1b                	add    %ebx,(%ebx)
 8048592:	03 3b                	add    (%ebx),%edi
 8048594:	28 00                	sub    %al,(%eax)
 8048596:	00 00                	add    %al,(%eax)
 8048598:	04 00                	add    $0x0,%al
 804859a:	00 00                	add    %al,(%eax)
 804859c:	90                   	nop
 804859d:	fd                   	std    
 804859e:	ff                   	(bad)  
 804859f:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 80485a3:	00 ed                	add    %ch,%ch
 80485a5:	fe                   	(bad)  
 80485a6:	ff                   	(bad)  
 80485a7:	ff 68 00             	ljmp   *0x0(%eax)
 80485aa:	00 00                	add    %al,(%eax)
 80485ac:	70 ff                	jo     80485ad <_IO_stdin_used+0x21>
 80485ae:	ff                   	(bad)  
 80485af:	ff 88 00 00 00 e0    	decl   -0x20000000(%eax)
 80485b5:	ff                   	(bad)  
 80485b6:	ff                   	(bad)  
 80485b7:	ff c4                	inc    %esp
 80485b9:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

080485bc <__FRAME_END__-0xac>:
 80485bc:	14 00                	adc    $0x0,%al
 80485be:	00 00                	add    %al,(%eax)
 80485c0:	00 00                	add    %al,(%eax)
 80485c2:	00 00                	add    %al,(%eax)
 80485c4:	01 7a 52             	add    %edi,0x52(%edx)
 80485c7:	00 01                	add    %al,(%ecx)
 80485c9:	7c 08                	jl     80485d3 <_IO_stdin_used+0x47>
 80485cb:	01 1b                	add    %ebx,(%ebx)
 80485cd:	0c 04                	or     $0x4,%al
 80485cf:	04 88                	add    $0x88,%al
 80485d1:	01 00                	add    %eax,(%eax)
 80485d3:	00 20                	add    %ah,(%eax)
 80485d5:	00 00                	add    %al,(%eax)
 80485d7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80485da:	00 00                	add    %al,(%eax)
 80485dc:	44                   	inc    %esp
 80485dd:	fd                   	std    
 80485de:	ff                   	(bad)  
 80485df:	ff 60 00             	jmp    *0x0(%eax)
 80485e2:	00 00                	add    %al,(%eax)
 80485e4:	00 0e                	add    %cl,(%esi)
 80485e6:	08 46 0e             	or     %al,0xe(%esi)
 80485e9:	0c 4a                	or     $0x4a,%al
 80485eb:	0f 0b                	ud2    
 80485ed:	74 04                	je     80485f3 <_IO_stdin_used+0x67>
 80485ef:	78 00                	js     80485f1 <_IO_stdin_used+0x65>
 80485f1:	3f                   	aas    
 80485f2:	1a 3b                	sbb    (%ebx),%bh
 80485f4:	2a 32                	sub    (%edx),%dh
 80485f6:	24 22                	and    $0x22,%al
 80485f8:	1c 00                	sbb    $0x0,%al
 80485fa:	00 00                	add    %al,(%eax)
 80485fc:	40                   	inc    %eax
 80485fd:	00 00                	add    %al,(%eax)
 80485ff:	00 7d fe             	add    %bh,-0x2(%ebp)
 8048602:	ff                   	(bad)  
 8048603:	ff                   	(bad)  
 8048604:	78 00                	js     8048606 <_IO_stdin_used+0x7a>
 8048606:	00 00                	add    %al,(%eax)
 8048608:	00 41 0e             	add    %al,0xe(%ecx)
 804860b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048611:	02 74 c5 0c          	add    0xc(%ebp,%eax,8),%dh
 8048615:	04 04                	add    $0x4,%al
 8048617:	00 38                	add    %bh,(%eax)
 8048619:	00 00                	add    %al,(%eax)
 804861b:	00 60 00             	add    %ah,0x0(%eax)
 804861e:	00 00                	add    %al,(%eax)
 8048620:	e0 fe                	loopne 8048620 <_IO_stdin_used+0x94>
 8048622:	ff                   	(bad)  
 8048623:	ff 61 00             	jmp    *0x0(%ecx)
 8048626:	00 00                	add    %al,(%eax)
 8048628:	00 41 0e             	add    %al,0xe(%ecx)
 804862b:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048631:	87 03                	xchg   %eax,(%ebx)
 8048633:	43                   	inc    %ebx
 8048634:	0e                   	push   %cs
 8048635:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804863b:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 8048642:	0e                   	push   %cs
 8048643:	14 41                	adc    $0x41,%al
 8048645:	c3                   	ret    
 8048646:	0e                   	push   %cs
 8048647:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804864a:	0e                   	push   %cs
 804864b:	0c 41                	or     $0x41,%al
 804864d:	c7                   	(bad)  
 804864e:	0e                   	push   %cs
 804864f:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048652:	0e                   	push   %cs
 8048653:	04 10                	add    $0x10,%al
 8048655:	00 00                	add    %al,(%eax)
 8048657:	00 9c 00 00 00 14 ff 	add    %bl,-0xec0000(%eax,%eax,1)
 804865e:	ff                   	(bad)  
 804865f:	ff 02                	incl   (%edx)
 8048661:	00 00                	add    %al,(%eax)
 8048663:	00 00                	add    %al,(%eax)
 8048665:	00 00                	add    %al,(%eax)
	...

08048668 <__FRAME_END__>:
 8048668:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	50                   	push   %eax
 8049f09:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	30                   	.byte 0x30
 8049f0d:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	f0 82                	lock (bad) 
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	0d 00 00 00 74       	or     $0x74000000,%eax
 8049f29:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	3c 82                	cmp    $0x82,%al
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	56                   	push   %esi
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	28 00                	sub    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 c8                	add    %cl,%al
 8049f99:	82                   	(bad)  
 8049f9a:	04 08                	add    $0x8,%al
 8049f9c:	11 00                	adc    %eax,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	c0 82 04 08 12 00 00 	rolb   $0x0,0x120804(%edx)
 8049fa7:	00 08                	add    %cl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f a0             	ljmp   *-0x60(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 92             	ljmp   *-0x6e(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	36 83 04 08 46       	addl   $0x46,%ss:(%eax,%ecx,1)
 804a011:	83 04 08 56          	addl   $0x56,(%eax,%ecx,1)
 804a015:	83 04 08 66          	addl   $0x66,(%eax,%ecx,1)
 804a019:	83 04 08 76          	addl   $0x76,(%eax,%ecx,1)
 804a01d:	83                   	.byte 0x83
 804a01e:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a020 <__data_start>:
 804a020:	00 00                	add    %al,(%eax)
	...

0804a024 <__dso_handle>:
 804a024:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a040 <completed.6591>:
	...

0804a060 <p>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048278>
   a:	74 75                	je     81 <_init-0x804826f>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	38 2e                	cmp    %ch,(%esi)
  11:	34 2d                	xor    $0x2d,%al
  13:	32 75 62             	xor    0x62(%ebp),%dh
  16:	75 6e                	jne    86 <_init-0x804826a>
  18:	74 75                	je     8f <_init-0x8048261>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 2e             	xor    %dh,(%esi,%ebp,1)
  22:	33 29                	xor    (%ecx),%ebp
  24:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  27:	38 2e                	cmp    %ch,(%esi)
  29:	34 00                	xor    $0x0,%al
